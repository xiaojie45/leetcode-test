// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`autocomplete component autocomplete should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Autocomplete />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="search-input"
        >
          <input
            onBlur={[Function]}
            onChange={[Function]}
            type="text"
            value=""
          />
          <span>
            <img
              alt="search icon"
              src="search.svg"
            />
          </span>
        </div>,
        <div
          className="search-results hide"
        />,
      ],
      "className": "Autocomplete",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              onBlur={[Function]}
              onChange={[Function]}
              type="text"
              value=""
            />,
            <span>
              <img
                alt="search icon"
                src="search.svg"
              />
            </span>,
          ],
          "className": "search-input",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onBlur": [Function],
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="search icon"
                src="search.svg"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "search icon",
                "src": "search.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "search-results hide",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search-input"
          >
            <input
              onBlur={[Function]}
              onChange={[Function]}
              type="text"
              value=""
            />
            <span>
              <img
                alt="search icon"
                src="search.svg"
              />
            </span>
          </div>,
          <div
            className="search-results hide"
          />,
        ],
        "className": "Autocomplete",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              />,
              <span>
                <img
                  alt="search icon"
                  src="search.svg"
                />
              </span>,
            ],
            "className": "search-input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onBlur": [Function],
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="search icon"
                  src="search.svg"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "search icon",
                  "src": "search.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "search-results hide",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
